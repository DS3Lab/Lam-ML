import matplotlib
matplotlib.use('TkAgg')
import matplotlib.pyplot as plt

import numpy as np


#matplotlib.rcParams['font.family'] = "sans-serif"
#matplotlib.rcParams['font.sans-serif'] = "Comic Sans MS"
#matplotlib.rcParams['font.sans-serif'] = "Helvetica"
matplotlib.rcParams['font.style'] = "italic"
matplotlib.rcParams['font.weight'] = "bold"

matplotlib.rcParams['lines.linewidth'] = 3

#matplotlib.rcParams['axes.linewidth'] = 2
#matplotlib.rcParams['axes.edgecolor'] = 'Grey'
matplotlib.rcParams['axes.titlesize'] = 10
matplotlib.rcParams['figure.titleweight'] = 'bold'

matplotlib.rcParams['axes.labelsize'] = 10
matplotlib.rcParams['xtick.labelsize'] = 7
matplotlib.rcParams['ytick.labelsize'] = 6

#matplotlib.rcParams['hatch.linewidth'] = 0.1

matplotlib.rcParams['legend.fontsize'] = 6
matplotlib.rcParams['legend.edgecolor'] = 'Black'


hatches = ('', '**', '++', 'oo', '', '*', 'o', '.', 'O')
colors = ['Red', 'Skyblue', 'Orange', 'LightGrey', 'MediumSlateBlue', 'Tomato', 'Palegreen', 'Azure']

# SketchML, Adam, ZipML
methods = ['grad-average, lr=0.08', 'model-average, lr=0.1', 'centralized, lr=0.19']

n_epochs = 40

grad_time = [17.5 * x for x in range(n_epochs)]
grad_loss = [0.7580464455214410,
0.7472704378041350,
0.7410494251684710,
0.737101674079895,
0.7344299554824830,
0.7325256304307420,
0.7311068583618510,
0.7299869656562810,
0.7290828227996830,
0.728338981216604,
0.7276818779381840,
0.7271159128709270,
0.7266137762503190,
0.7261519757184120,
0.7257363498210910,
0.7253480011766610,
0.7249906361103060,
0.7246548750183800,
0.7243435707959260,
0.7240458835255020,
0.7237661020322280,
0.7235050201416020,
0.7232506004246800,
0.7230197976935990,
0.7227899513461370,
0.7225691296837550,
0.7223626646128570,
0.7221653678200460,
0.721976179968227,
0.7217968241734940,
0.7216239625757390,
0.721457451581955,
0.7212996320291000,
0.7211506529287860,
0.7209999723867940,
0.720863093029369,
0.7207249457185920,
0.7205950292673980,
0.7204715609550480,
0.7203506231307980]

model_time = [11.2 * x for x in range(n_epochs)]
model_loss = [0.664276361465454,
0.655244255065918,
0.651180627129295,
0.648927788300948,
0.647470001740889,
0.646406871622259,
0.64555774602023,
0.644870068810203,
0.644267389991067,
0.643740120801059,
0.643274051492864,
0.642868054996837,
0.642479406703602,
0.642139326442372,
0.641824592243541,
0.641538602655584,
0.641277330571955,
0.641034091602672,
0.640812149914828,
0.640605167909102,
0.640414888208563,
0.640236871892756,
0.640076472542503,
0.639920195666226,
0.63978046503934,
0.639646022970026,
0.639524672248147,
0.639407144893299,
0.63930271322077,
0.639200670068914,
0.63911285833879,
0.639015717939897,
0.638935873725198,
0.638856393640692,
0.63878831429915,
0.638723533803766,
0.638651778481223,
0.638594727082686,
0.63853606744246,
0.638485644080422]

single_time = [15.1 * x for x in range(80)]
single_loss = [0.712736666202545,
0.694049477577209,
0.684262812137604,
0.679131090641022,
0.674437344074249,
0.670285522937775,
0.66825932264328,
0.666086733341217,
0.664224624633789,
0.662251710891724,
0.660491228103638,
0.659580051898956,
0.65803998708725,
0.657227098941803,
0.65617173910141,
0.655090093612671,
0.65539014339447,
0.654733836650848,
0.654294848442078,
0.654186308383942,
0.651990532875061,
0.651324272155762,
0.652230381965637,
0.650650441646576,
0.650442659854889,
0.650377452373505,
0.650722980499268,
0.651536703109741,
0.649258434772491,
0.649764895439148,
0.65034282207489,
0.648664534091949,
0.647886574268341,
0.648842811584473,
0.648789405822754,
0.648056387901306,
0.648326277732849,
0.64681875705719,
0.64832079410553,
0.648330807685852,
0.646906673908234,
0.648293137550354,
0.647946059703827,
0.64682400226593,
0.646374702453613,
0.646359920501709,
0.647645890712738,
0.646164178848267,
0.64675498008728,
0.64715838432312,
0.645622909069061,
0.645450294017792,
0.647358775138855,
0.647298216819763,
0.64517205953598,
0.643438458442688,
0.644484162330627,
0.644864082336426,
0.646381258964539,
0.644155025482178,
0.645248174667358,
0.64452463388443,
0.646503806114197,
0.645950078964233,
0.644224345684052,
0.644705712795258,
0.643527328968048,
0.644389808177948,
0.644945740699768,
0.644264280796051,
0.644973576068878,
0.643700838088989,
0.643344461917877,
0.644879221916199,
0.644685566425323,
0.643782258033752,
0.644323527812958,
0.644464910030365,
0.644644975662231,
0.643665909767151
]


plt.figure(figsize=(3, 3))

plt.plot(grad_time, model_loss, ".-", color=colors[0],  label=methods[0])
plt.plot(model_time, model_loss, "x-", color=colors[1],  label=methods[1])
plt.plot(single_time, single_loss, "o-", color=colors[2],  label=methods[2])

plt.title("LR, Higgs, 10 workers", fontweight="bold")
plt.ylabel("loss")
plt.xlabel("seconds")
plt.yscale("log")
plt.xlim(0, 200)
plt.ylim(0.62, 0.78)
#plt.xticks((0, 100, 200, 300, 400, 500), ('0', '100', '200', '300', '400', '500'))
plt.xticks((0, 100, 200), ('0', '100', '200'))
plt.yticks((0.64, 0.66, 0.68, 0.70, 0.72, 0.74, 0.76), ('0.64', '0.66', '0.68', '0.70', '0.72', '0.74', '0.76'))
plt.legend(bbox_to_anchor=(0, 1), loc=2, ncol=1, shadow=False)

plt.tight_layout()

plt.savefig("model_grad_average_elasti_LR.pdf")
#plt.show()
